#############################################################################
# Makefile for building: libglfw.so
# Generated by qmake (3.0) (Qt 5.0.0) on: Sat Feb 9 23:07:52 2013
# Project:  glfw.pro
# Template: lib
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -spec linux-g++-64 -o Makefile glfw.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DGLFW_BUILD_DLL -D_GLFW_HAS_PTHREAD -D_GLFW_HAS_DLOPEN -D_GLFW_HAS_SYSCONF -D_GLFW_HAS_SYSCTL -D_GLFW_HAS_GLXGETPROCADDRESS
CFLAGS        = -m64 -pipe -O3 -Os -Wall -Wfatal-errors -fPIC $(DEFINES)
CXXFLAGS      = -m64 -O3 -Os -std=gnu++11 -Wall -Wfatal-errors -Wno-invalid-offsetof -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt5/mkspecs/linux-g++-64 -I. -Iinclude -Isrc
LINK          = g++
LFLAGS        = -O3 -Wl,-O1 -Wl,-rpath,/home/taylorsnead/ShadowFox/ShadowFox-Engine/src/external/glfw/$(DESTDIR) -shared
LIBS          = $(SUBLIBS) -L/home/taylorsnead/ShadowFox/ShadowFox-Engine/bin64/linux -lglx -lX11 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt5/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ../../../bin64/linux/build/glfw/

####### Files

SOURCES       = src/window.c \
		src/time.c \
		src/thread.c \
		src/tga.c \
		src/stream.c \
		src/main.cpp \
		src/joystick.c \
		src/input.c \
		src/init.c \
		src/image.c \
		src/glext.c \
		src/fullscreen.c \
		src/enable.c \
		src/x11/x11_window.c \
		src/x11/x11_time.c \
		src/x11/x11_thread.c \
		src/x11/x11_keysym2unicode.c \
		src/x11/x11_joystick.c \
		src/x11/x11_init.c \
		src/x11/x11_glext.c \
		src/x11/x11_fullscreen.c \
		src/x11/x11_enable.c 
OBJECTS       = ../../../bin64/linux/build/glfw/window.o \
		../../../bin64/linux/build/glfw/time.o \
		../../../bin64/linux/build/glfw/thread.o \
		../../../bin64/linux/build/glfw/tga.o \
		../../../bin64/linux/build/glfw/stream.o \
		../../../bin64/linux/build/glfw/main.o \
		../../../bin64/linux/build/glfw/joystick.o \
		../../../bin64/linux/build/glfw/input.o \
		../../../bin64/linux/build/glfw/init.o \
		../../../bin64/linux/build/glfw/image.o \
		../../../bin64/linux/build/glfw/glext.o \
		../../../bin64/linux/build/glfw/fullscreen.o \
		../../../bin64/linux/build/glfw/enable.o \
		../../../bin64/linux/build/glfw/x11_window.o \
		../../../bin64/linux/build/glfw/x11_time.o \
		../../../bin64/linux/build/glfw/x11_thread.o \
		../../../bin64/linux/build/glfw/x11_keysym2unicode.o \
		../../../bin64/linux/build/glfw/x11_joystick.o \
		../../../bin64/linux/build/glfw/x11_init.o \
		../../../bin64/linux/build/glfw/x11_glext.o \
		../../../bin64/linux/build/glfw/x11_fullscreen.o \
		../../../bin64/linux/build/glfw/x11_enable.o
DIST          = /usr/share/qt5/mkspecs/features/spec_pre.prf \
		/usr/share/qt5/mkspecs/common/shell-unix.conf \
		/usr/share/qt5/mkspecs/common/unix.conf \
		/usr/share/qt5/mkspecs/common/linux.conf \
		/usr/share/qt5/mkspecs/common/gcc-base.conf \
		/usr/share/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt5/mkspecs/common/g++-base.conf \
		/usr/share/qt5/mkspecs/common/g++-unix.conf \
		/usr/share/qt5/mkspecs/qconfig.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_bootstrap.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_platformsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/share/qt5/mkspecs/features/qt_functions.prf \
		/usr/share/qt5/mkspecs/features/qt_config.prf \
		/usr/share/qt5/mkspecs/linux-g++-64/qmake.conf \
		/usr/share/qt5/mkspecs/features/spec_post.prf \
		/usr/share/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt5/mkspecs/features/default_pre.prf \
		/usr/share/qt5/mkspecs/features/unix/default_pre.prf \
		../../settings.pri \
		../external.pro \
		/usr/share/qt5/mkspecs/features/release.prf \
		/usr/share/qt5/mkspecs/features/default_post.prf \
		/usr/share/qt5/mkspecs/features/dll.prf \
		/usr/share/qt5/mkspecs/features/shared.prf \
		/usr/share/qt5/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt5/mkspecs/features/warn_on.prf \
		/usr/share/qt5/mkspecs/features/wayland-scanner.prf \
		/usr/share/qt5/mkspecs/features/testcase_targets.prf \
		/usr/share/qt5/mkspecs/features/exceptions.prf \
		/usr/share/qt5/mkspecs/features/yacc.prf \
		/usr/share/qt5/mkspecs/features/lex.prf \
		glfw.pro \
		glfw.pro
QMAKE_TARGET  = glfw
DESTDIR       = ../../../bin64/linux/
TARGET        = libglfw.so
TARGETD       = libglfw.so


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../../../bin64/linux/$(TARGET)

../../../bin64/linux/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@test -d ../../../bin64/linux/ || $(MKDIR) ../../../bin64/linux/ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../../../bin64/linux/



Makefile: glfw.pro /usr/share/qt5/mkspecs/linux-g++-64/qmake.conf /usr/share/qt5/mkspecs/features/spec_pre.prf \
		/usr/share/qt5/mkspecs/common/shell-unix.conf \
		/usr/share/qt5/mkspecs/common/unix.conf \
		/usr/share/qt5/mkspecs/common/linux.conf \
		/usr/share/qt5/mkspecs/common/gcc-base.conf \
		/usr/share/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt5/mkspecs/common/g++-base.conf \
		/usr/share/qt5/mkspecs/common/g++-unix.conf \
		/usr/share/qt5/mkspecs/qconfig.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_bootstrap.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_platformsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/share/qt5/mkspecs/features/qt_functions.prf \
		/usr/share/qt5/mkspecs/features/qt_config.prf \
		/usr/share/qt5/mkspecs/linux-g++-64/qmake.conf \
		/usr/share/qt5/mkspecs/features/spec_post.prf \
		/usr/share/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt5/mkspecs/features/default_pre.prf \
		/usr/share/qt5/mkspecs/features/unix/default_pre.prf \
		../../settings.pri \
		../external.pro \
		/usr/share/qt5/mkspecs/features/release.prf \
		/usr/share/qt5/mkspecs/features/default_post.prf \
		/usr/share/qt5/mkspecs/features/dll.prf \
		/usr/share/qt5/mkspecs/features/shared.prf \
		/usr/share/qt5/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt5/mkspecs/features/warn_on.prf \
		/usr/share/qt5/mkspecs/features/wayland-scanner.prf \
		/usr/share/qt5/mkspecs/features/testcase_targets.prf \
		/usr/share/qt5/mkspecs/features/exceptions.prf \
		/usr/share/qt5/mkspecs/features/yacc.prf \
		/usr/share/qt5/mkspecs/features/lex.prf \
		glfw.pro
	$(QMAKE) -spec linux-g++-64 -o Makefile glfw.pro
/usr/share/qt5/mkspecs/features/spec_pre.prf:
/usr/share/qt5/mkspecs/common/shell-unix.conf:
/usr/share/qt5/mkspecs/common/unix.conf:
/usr/share/qt5/mkspecs/common/linux.conf:
/usr/share/qt5/mkspecs/common/gcc-base.conf:
/usr/share/qt5/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt5/mkspecs/common/g++-base.conf:
/usr/share/qt5/mkspecs/common/g++-unix.conf:
/usr/share/qt5/mkspecs/qconfig.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_bootstrap.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_concurrent.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_core.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_dbus.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_gui.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_network.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_opengl.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_platformsupport.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_printsupport.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_sql.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_testlib.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_widgets.pri:
/usr/share/qt5/mkspecs/modules/qt_lib_xml.pri:
/usr/share/qt5/mkspecs/features/qt_functions.prf:
/usr/share/qt5/mkspecs/features/qt_config.prf:
/usr/share/qt5/mkspecs/linux-g++-64/qmake.conf:
/usr/share/qt5/mkspecs/features/spec_post.prf:
/usr/share/qt5/mkspecs/features/exclusive_builds.prf:
/usr/share/qt5/mkspecs/features/default_pre.prf:
/usr/share/qt5/mkspecs/features/unix/default_pre.prf:
../../settings.pri:
../external.pro:
/usr/share/qt5/mkspecs/features/release.prf:
/usr/share/qt5/mkspecs/features/default_post.prf:
/usr/share/qt5/mkspecs/features/dll.prf:
/usr/share/qt5/mkspecs/features/shared.prf:
/usr/share/qt5/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt5/mkspecs/features/warn_on.prf:
/usr/share/qt5/mkspecs/features/wayland-scanner.prf:
/usr/share/qt5/mkspecs/features/testcase_targets.prf:
/usr/share/qt5/mkspecs/features/exceptions.prf:
/usr/share/qt5/mkspecs/features/yacc.prf:
/usr/share/qt5/mkspecs/features/lex.prf:
glfw.pro:
qmake: FORCE
	@$(QMAKE) -spec linux-g++-64 -o Makefile glfw.pro

qmake_all: FORCE

dist: 
	@test -d ../../../bin64/linux/build/glfw/glfw1.0.0 || $(MKDIR) ../../../bin64/linux/build/glfw/glfw1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) ../../../bin64/linux/build/glfw/glfw1.0.0/ && (cd `dirname ../../../bin64/linux/build/glfw/glfw1.0.0` && $(TAR) glfw1.0.0.tar glfw1.0.0 && $(COMPRESS) glfw1.0.0.tar) && $(MOVE) `dirname ../../../bin64/linux/build/glfw/glfw1.0.0`/glfw1.0.0.tar.gz . && $(DEL_FILE) -r ../../../bin64/linux/build/glfw/glfw1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_wayland-server-header_make_all:
compiler_wayland-server-header_clean:
compiler_wayland-client-header_make_all:
compiler_wayland-client-header_clean:
compiler_wayland-code_make_all:
compiler_wayland-code_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

../../../bin64/linux/build/glfw/window.o: src/window.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/window.o src/window.c

../../../bin64/linux/build/glfw/time.o: src/time.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/time.o src/time.c

../../../bin64/linux/build/glfw/thread.o: src/thread.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/thread.o src/thread.c

../../../bin64/linux/build/glfw/tga.o: src/tga.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/tga.o src/tga.c

../../../bin64/linux/build/glfw/stream.o: src/stream.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/stream.o src/stream.c

../../../bin64/linux/build/glfw/main.o: src/main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/main.o src/main.cpp

../../../bin64/linux/build/glfw/joystick.o: src/joystick.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/joystick.o src/joystick.c

../../../bin64/linux/build/glfw/input.o: src/input.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/input.o src/input.c

../../../bin64/linux/build/glfw/init.o: src/init.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/init.o src/init.c

../../../bin64/linux/build/glfw/image.o: src/image.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/image.o src/image.c

../../../bin64/linux/build/glfw/glext.o: src/glext.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/glext.o src/glext.c

../../../bin64/linux/build/glfw/fullscreen.o: src/fullscreen.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/fullscreen.o src/fullscreen.c

../../../bin64/linux/build/glfw/enable.o: src/enable.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/enable.o src/enable.c

../../../bin64/linux/build/glfw/x11_window.o: src/x11/x11_window.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_window.o src/x11/x11_window.c

../../../bin64/linux/build/glfw/x11_time.o: src/x11/x11_time.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_time.o src/x11/x11_time.c

../../../bin64/linux/build/glfw/x11_thread.o: src/x11/x11_thread.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_thread.o src/x11/x11_thread.c

../../../bin64/linux/build/glfw/x11_keysym2unicode.o: src/x11/x11_keysym2unicode.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_keysym2unicode.o src/x11/x11_keysym2unicode.c

../../../bin64/linux/build/glfw/x11_joystick.o: src/x11/x11_joystick.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_joystick.o src/x11/x11_joystick.c

../../../bin64/linux/build/glfw/x11_init.o: src/x11/x11_init.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_init.o src/x11/x11_init.c

../../../bin64/linux/build/glfw/x11_glext.o: src/x11/x11_glext.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_glext.o src/x11/x11_glext.c

../../../bin64/linux/build/glfw/x11_fullscreen.o: src/x11/x11_fullscreen.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_fullscreen.o src/x11/x11_fullscreen.c

../../../bin64/linux/build/glfw/x11_enable.o: src/x11/x11_enable.c src/internal.h \
		src/platform.h \
		include/GL/glfw.h \
		src/win32/platform.h \
		src/cocoa/platform.h \
		src/x11/platform.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../../../bin64/linux/build/glfw/x11_enable.o src/x11/x11_enable.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

