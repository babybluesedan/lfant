scene Pong
{
	system Physics
	{
		gravity = (0,0,0)
	}

	entity Observer
	{
		layer = Other

		component Transform
		{
			position = (0,0,8)
			rotation = (90,0,0)
		}

		component Camera
		{
			mode = 0
			fov = 90
		}
	}

	entity Player1
	{
		layer = Players

		component Transform
		{
			position = (0.5f,0,0)
			scale = (0.05, 0.3, 0.1)
		//	rotation = (-90,0,0)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		//	lockPosition = (1,0,1)
		}

		// Add Handle component

		// Add PongPlayer component
		component pong::Player
		{
		}
	}

	entity Player2
	{
		layer = Players

		component Transform
		{
			position = (-1.0f,0,0)
			scale = (0.05, 0.3, 0.1)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		}

		// Add Handle component

		// Add PongAI component
	}

	entity Ball
	{
		layer = Pucks

		component Transform
		{
			position = (0,0,0)
		//	rotation = (-90,0,0)
			scale = 0.1f
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		// Add Ball/Puck comp

		component SphereCollider
		{
			// Set size?
			size = (1,1,1)
		}

		component Rigidbody
		{
			friction = 1.3f
			restitution = 1.01f
			lockPosition = (0,0,1)
			lockRotation = (1,1,1)
		}

		component pong::Ball
		{
		}
	}

	entity LeftWall
	{
		layer = Walls

		component Transform
		{
			position = (-1.5f,0,0)
			scale = (0.02, 1.0, 0.1)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		}
	}

	entity RightWall
	{
		layer = Walls

		component Transform
		{
			position = (1.5f,0,0)
			scale = (0.02, 1.0, 0.1)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		}
	}

	entity UpperWall
	{
		layer = Walls

		component Transform
		{
			position = (0,1.0f,0)
			scale = (1.0, 0.02, 0.1)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		}
	}

	entity LowerWall
	{
		layer = Walls

		component Transform
		{
			position = (0,-1.0f,0)
			scale = (1.0, 0.02, 0.1)
		}

		component Mesh
		{
			file = meshes/plane.obj
			material = materials/Diffuse.mat
		}

		component BoxCollider
		{
		}

		component Rigidbody
		{
			mass = 0
			restitution = 1
		}
	}
}